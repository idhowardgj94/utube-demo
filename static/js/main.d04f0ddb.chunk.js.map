{"version":3,"sources":["services/youtubeApiService.js","services/likeApiService.js","components/VideoBox.jsx","utils.js","pages/Home.jsx","components/AdBox.jsx","pages/Player.jsx","pages/Like.jsx","App.jsx","serviceWorker.js","index.js"],"names":["singleton","this","_event$","BehaviorSubject","_repo$","init","_numPerPg","from","fetch","then","r","json","pipe","tap","d","next","console","log","switchMap","data","nextPageToken","subscribe","nextItems","items","value","concat","page","offset","repo","slice","id","find","_storageKey","_likeList","_likeSubject$","i","localStorage","getItem","undefined","JSON","parse","_sync","map","l","YoutubeApiService","get","flatMap","it","push","filter","setItem","stringify","getLikes","asObservable","VideoBox","props","useState","LikeService","isLike","islike","refresh","clickhandler","removeLike","addLike","className","to","src","thumbnail","url","alt","title","duration","split","replace","onClick","description","Home","setData","useEffect","ApiService","getPage","idx","key","snippet","thumbnails","standard","contentDetails","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","AdBox","adshow","setAdshow","videoEl","playEvent","fromEvent","current","pauseEvent","sub","merge","s","unsubscribe","Player","useRef","useParams","autoplay","controls","width","height","playerRef","t","Like","data$","default","length","App","event","setEvent","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d04f0ddb.chunk.js","sourcesContent":["// @flow\nimport { BehaviorSubject, from } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\nexport type Thumbnail = {\n  url: string,\n  width: number,\n  height: number,\n};\n\nexport type Items = {\n  kind: string,\n  etag: string,\n  id: string,\n  snippet: {\n    publishedAt: Date,\n    channelId: string,\n    title: string,\n    description: string,\n    thumbnails: {\n      default: Thumbnail,\n      medium: Thumbnail,\n      high: Thumbnail,\n      standard: Thumbnail,\n      maxres: Thumbnail,\n    },\n  },\n  channelTitle: string,\n  categoryId: string,\n  liveBroadcastContent: string,\n  contentDetails: {\n    duration: string,\n  },\n};\n\nexport type YoutubeRepository = {\n  kind: string,\n  etag: string,\n  items: Items[],\n  nextPageToken: string,\n};\n\nclass YoutubeApiService {\n  _event$: BehaviorSubject<'ready' | 'init'>;\n  _repo$: BehaviorSubject<YoutubeRepository | null>;\n  _numPerPg: number;\n  constructor() {\n    this._event$ = new BehaviorSubject('init');\n    this._repo$ = new BehaviorSubject(null);\n    this.init();\n    this._numPerPg = 12;\n  }\n\n  get event(): 'ready' | 'init' {\n    return this._event$.value;\n  }\n\n  init() {\n    from(\n      fetch(\n        'https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails&chart=mostPopular&maxResults=50&key=AIzaSyDE83bg6cVc2HymzqOQbBMtYGJuE-d7Nm4'\n      ).then((r) => r.json())\n    )\n      .pipe(\n        tap((d) => this._repo$.next(d)),\n        tap(console.log),\n        switchMap((data) =>\n          from(\n            fetch(`\n        https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails&chart=mostPopular&maxResults=50&pageToken=${data.nextPageToken}&key=AIzaSyDE83bg6cVc2HymzqOQbBMtYGJuE-d7Nm4\n        `).then((r) => r.json())\n          )\n        )\n      )\n      .subscribe((data: YoutubeRepository) => {\n        const nextItems = data.items;\n        const r = this._repo$.value;\n        if (r !== null) {\n          r.items = r.items.concat(nextItems);\n        }\n\n        this._repo$.next(r);\n        this._event$.next('ready');\n      });\n  }\n\n  getPage(page: number): Items[] {\n    const offset = page * this._numPerPg;\n    const repo = this._repo$.value;\n    console.log('inside getPage', repo);\n    return repo !== null\n      ? repo.items.slice(offset, offset + this._numPerPg)\n      : [];\n  }\n\n  get(id: string): ?Items {\n    return this._repo$.value\n      ? this._repo$.value.items.find((d) => d.id === id)\n      : null;\n  }\n}\n\nconst singleton: YoutubeApiService = new YoutubeApiService();\nexport default singleton;\n","// @flow\nimport YoutubeApiService from './youtubeApiService';\nimport type { Items } from './youtubeApiService';\nimport { Observable, BehaviorSubject } from 'rxjs';\nclass LikeApiService {\n  _storageKey: string = 'like-cache';\n  _likeList: string[] = [];\n  _likeSubject$: BehaviorSubject<Items[]>;\n  constructor() {\n    this._likeSubject$ = new BehaviorSubject([]);\n    const i = localStorage.getItem(this._storageKey);\n    if (i !== undefined && i !== null) {\n      this._likeList = JSON.parse(i);\n    }\n    this._sync();\n  }\n\n  get data$(): Observable<Items[]> {\n    return this._likeSubject$.asObservable();\n  }\n\n  getLikes(): Items[] {\n    let ret = [];\n    ret = this._likeList\n      .map((l) => {\n        const r = YoutubeApiService.get(l);\n        return r ? [r] : [];\n      })\n      .flatMap((it) => it);\n    return ret;\n  }\n\n  addLike(id: string) {\n    !this._likeList.find((d) => d === id) && this._likeList.push(id);\n    this._sync();\n  }\n\n  removeLike(id: string) {\n    this._likeList = this._likeList.filter((it) => it !== id);\n    this._sync();\n  }\n\n  isLike(id: string): boolean {\n    return this._likeList.find((it) => it === id) !== undefined;\n  }\n\n  _sync() {\n    localStorage.setItem(this._storageKey, JSON.stringify(this._likeList));\n    this._likeSubject$.next(this.getLikes());\n  }\n}\n\nconst singleton: LikeApiService = new LikeApiService();\nexport default singleton;\n","// @flow\nimport * as React from 'react';\nimport { useState } from 'react';\nimport '../sass/VideoBox.scss';\nimport type { Thumbnail } from '../services/youtubeApiService';\nimport { getDuration } from '../utils';\nimport { Link } from 'react-router-dom';\nimport LikeService from '../services/likeApiService';\ninterface Props {\n  thumbnail: Thumbnail;\n  title: string;\n  id: string;\n  description: string;\n  duration: string;\n}\n\nexport function VideoBox(props: Props): React$Node {\n  const [islike, refresh] = useState(LikeService.isLike(props.id));\n\n  const clickhandler = () => {\n    if (islike) {\n      LikeService.removeLike(props.id);\n    } else {\n      LikeService.addLike(props.id);\n    }\n    refresh(!islike);\n  };\n\n  return (\n    <section className=\"box\">\n      <Link to={`/player/${props.id}`}>\n        <section className=\"img_container\">\n          <img src={props.thumbnail.url} alt=\"video img\" />\n        </section>\n      </Link>\n\n      <div className=\"description\">\n        <section>\n          <Link to={`/player/${props.id}`}>\n            <div className=\"topic\">{props.title}</div>\n          </Link>\n        </section>\n        <section className=\"p10\">\n          <div className=\"pl8\">\n            影片長度: {getDuration(props.duration)} {` `}\n            {islike ? (\n              <button onClick={clickhandler}>移除收藏</button>\n            ) : (\n              <button onClick={clickhandler}>加入收藏</button>\n            )}\n          </div>\n          <article className=\"pl8 text_overflow_ellipsis\">\n            影片描述：\n            {props.description}\n          </article>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nexport default VideoBox;\n","// @flow\n\nexport function getDuration(t: string | string): string {\n  const r = t\n    .split('T')[1]\n    .replace('M', '分')\n    .replace('S', '秒')\n    .replace('H', '時');\n  return r;\n}\n","// @flow\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport VideoBox from '../components/VideoBox';\nimport ReactPaginate from 'react-paginate';\nimport '../sass/Home.scss';\nimport ApiService from '../services/youtubeApiService';\nimport type { Items } from '../services/youtubeApiService';\n// XXX VideoBox 會依賴 grid, 其實好像還好\nexport function Home(): React.Node {\n  const [data, setData] = useState<Items[] | null>([]);\n\n  useEffect(() => {\n    setData(ApiService.getPage(0));\n  }, []);\n  const handlePageClick = ({ selected }: { selected: number }) => {\n    console.log('handle page click', selected);\n    setData(ApiService.getPage(selected));\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"wrapper\">\n        {data !== null &&\n          data.map((d, idx) => (\n            <VideoBox\n              key={d.id}\n              id={d.id}\n              thumbnail={d.snippet.thumbnails.standard}\n              title={d.snippet.title}\n              description={d.snippet.description}\n              duration={d.contentDetails.duration}\n            />\n          ))}\n      </section>\n\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={9}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","// @flow\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { fromEvent, merge } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport '../sass/VideoBox.scss';\n\ninterface PropType {\n  videoEl: React.ElementRef<any>;\n}\n\nexport function AdBox(props: PropType): React.Node {\n  const [adshow, setAdshow] = useState(true);\n\n  useEffect(() => {\n    const { videoEl } = props;\n    const playEvent = fromEvent(videoEl.current, 'play');\n    const pauseEvent = fromEvent(videoEl.current, 'pause');\n\n    const sub = merge(playEvent, pauseEvent)\n      .pipe(tap(() => setAdshow((s) => !s)))\n      .subscribe();\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [props]);\n  return (\n    <div className={`ad ${adshow ? '' : 'hide'}`}>\n      <h1 className=\"pd10 text_center\">此demo範例由Howarrd設計</h1>\n    </div>\n  );\n}\n\nexport default AdBox;\n","// @flow\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AdBox from '../components/AdBox';\nimport ReactHlsPlayer from 'react-hls-player';\nimport '../sass/Player.scss';\nimport ApiService from '../services/youtubeApiService';\nimport type { Items } from '../services/youtubeApiService';\nexport function Player(): React.Node {\n  const videoEl = useRef(null);\n  let { id } = useParams();\n  const [s] = useState<?Items>(ApiService.get(id));\n\n  return (\n    <div className=\"container\">\n      <section className=\"video_container\">\n        <ReactHlsPlayer\n          url=\"https://bitdash-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8\"\n          autoplay={false}\n          controls={true}\n          width=\"100%\"\n          height=\"auto\"\n          playerRef={videoEl}\n          className=\"video\"\n        />\n        <AdBox videoEl={videoEl} />\n      </section>\n      <section className=\"description_card\">\n        <h1 className=\"topic\">{s && s.snippet.title}</h1>\n        {s &&\n          s.snippet.description.split('\\n').map((t, i) => <p key={i}>{t}</p>)}\n      </section>\n    </div>\n  );\n}\n\nexport default Player;\n","// @flow\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport VideoBox from '../components/VideoBox';\nimport '../sass/Home.scss';\nimport LikeService from '../services/likeApiService';\nimport type { Items } from '../services/youtubeApiService';\n\nexport function Like(): React.Node {\n  const [data, setData] = useState<Items[]>([]);\n\n  useEffect(() => {\n    LikeService._sync();\n    const description = LikeService.data$.subscribe(setData);\n    return () => {\n      description.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"wrapper\">\n        {data.map((d, idx) => (\n          <VideoBox\n            key={d.id}\n            id={d.id}\n            thumbnail={d.snippet.thumbnails.default}\n            title={d.snippet.title}\n            description={d.snippet.description}\n            duration={d.contentDetails.duration}\n          />\n        ))}\n        {data.length === 0 && <h2>您還沒有任何最愛影片</h2>}\n      </section>\n    </div>\n  );\n}\n\nexport default Like;\n","// @flow\nimport * as React from 'react';\nimport './App.scss';\nimport Home from './pages/Home';\nimport Player from './pages/Player';\nimport Like from './pages/Like';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ApiService from './services/youtubeApiService';\n\nexport function App(): React.Node {\n  const [event, setEvent] = useState('init');\n\n  useEffect(() => {\n    ApiService._event$.asObservable().subscribe((d) => {\n      setEvent(d);\n    });\n  }, []);\n  if (event === 'init') {\n    return (\n      <div className=\"container\">\n        <h1>讀取中，請稍候......</h1>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <Router basename=\"/utube-demo\">\n          <section className=\"header\">\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">首頁</Link>\n                </li>\n                <li>\n                  <Link to=\"/like\">收藏</Link>\n                </li>\n              </ul>\n            </nav>\n          </section>\n          <div className=\"body\">\n            <Switch>\n              <Route path=\"/player/:id\">\n                <Player />\n              </Route>\n              <Route path=\"/like\">\n                <Like />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}