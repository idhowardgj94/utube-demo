{"version":3,"sources":["assets/sample.jpg","components/VideoBox.jsx","utils.js","services/youtubeApiService.js","pages/Home.jsx","components/AdBox.jsx","pages/Player.jsx","pages/Like.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","VideoBox","props","className","to","id","src","thumbnail","url","alt","title","duration","split","replace","description","singleton","this","_event$","BehaviorSubject","_repo$","init","_numPerPg","from","fetch","then","r","json","pipe","tap","d","next","console","log","switchMap","data","nextPageToken","subscribe","nextItems","items","value","concat","page","offset","repo","slice","find","Home","useState","setData","useEffect","ApiService","getPage","map","idx","key","snippet","thumbnails","default","contentDetails","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","AdBox","adshow","setAdshow","videoEl","playEvent","fromEvent","current","pauseEvent","sub","merge","s","unsubscribe","Player","useRef","useParams","get","autoplay","controls","width","height","playerRef","t","i","Header","styled","header","Footer","footer","App","event","setEvent","asObservable","path","Like","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ce0ef9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.e9226429.jpg\";","// @flow\nimport * as React  from 'react';\nimport img from '../assets/sample.jpg';\nimport '../sass/VideoBox.scss';\nimport type { Thumbnail } from '../services/youtubeApiService';\nimport { getDuration } from '../utils';\nimport { Link } from 'react-router-dom';\ninterface Props {\n  thumbnail: Thumbnail;\n  title: String;\n  id: String;\n  description: String;\n  duration: String;\n}\n\nexport function VideoBox(props: Props): React$Node {\n  return (\n    <section className=\"box\">\n      <Link to={`/player/${props.id}`}>\n        <img src={props.thumbnail.url} alt=\"video img\" />\n      </Link>\n\n      <div className=\"description\">\n        <section>\n          <Link to={`/player/${props.id}`}>\n            <div className=\"topic\">{props.title}</div>\n          </Link>\n        </section>\n        <section>\n          <div className=\"pl8\">影片長度: {getDuration(props.duration)}</div>\n          <article className=\"pl8 text_overflow_ellipsis\">\n            影片描述：\n            {props.description}\n          </article>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nexport default VideoBox;\n","// @flow\n\nexport function getDuration(t: String | string): string {\n  const r = t\n    .split('T')[1]\n    .replace('M', '分')\n    .replace('S', '秒')\n    .replace('H', '時');\n  return r;\n}\n","// @flow\nimport { BehaviorSubject, from } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\nexport type Thumbnail = {\n  url: String,\n  width: Number,\n  height: Number,\n};\n\nexport type Items = {\n  kind: String,\n  etag: String,\n  id: String,\n  snippet: {\n    publishedAt: Date,\n    channelId: String,\n    title: String,\n    description: String,\n    thumbnails: {\n      default: Thumbnail,\n      medium: Thumbnail,\n      high: Thumbnail,\n      standard: Thumbnail,\n      maxres: Thumbnail,\n    },\n  },\n  channelTitle: String,\n  categoryId: String,\n  liveBroadcastContent: String,\n  contentDetails: {\n    duration: String,\n  },\n};\n\nexport type YoutubeRepository = {\n  kind: String,\n  etag: String,\n  items: Items[],\n  nextPageToken: String,\n};\n\nclass YoutubeApiService {\n  _event$: BehaviorSubject<'ready' | 'init'>;\n  _repo$: BehaviorSubject<YoutubeRepository | null>;\n  _numPerPg: number;\n  constructor() {\n    this._event$ = new BehaviorSubject('init');\n    this._repo$ = new BehaviorSubject(null);\n    this.init();\n    this._numPerPg = 12;\n  }\n\n  get event(): 'ready' | 'init' {\n    return this._event$.value;\n  }\n\n  init() {\n    from(\n      fetch(\n        'https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails&chart=mostPopular&maxResults=50&key=AIzaSyCrwZT5eJWe9ue4IDvvmrvXftdyVDIkQa8'\n      ).then((r) => r.json())\n    )\n      .pipe(\n        tap((d) => this._repo$.next(d)),\n        tap(console.log),\n        switchMap((data) =>\n          from(\n            fetch(`\n        https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails&chart=mostPopular&maxResults=50&pageToken=${data.nextPageToken}&key=AIzaSyCrwZT5eJWe9ue4IDvvmrvXftdyVDIkQa8\n        `).then((r) => r.json())\n          )\n        )\n      )\n      .subscribe((data: YoutubeRepository) => {\n        const nextItems = data.items;\n        const r = this._repo$.value;\n        r.items = r.items.concat(nextItems);\n        this._repo$.next(r);\n        this._event$.next('ready');\n      });\n  }\n\n  getPage(page: number): Items[] {\n    const offset = page * this._numPerPg;\n    const repo = this._repo$.value;\n    console.log('inside getPage', repo);\n    return repo !== null\n      ? repo.items.slice(offset, offset + this._numPerPg)\n      : [];\n  }\n\n  get(id): Item {\n    console.log(this._repo$.value.items.find((d) => d.id === id));\n    return this._repo$.value.items.find((d) => d.id === id);\n  }\n}\n\nconst singleton: YoutubeApiService = new YoutubeApiService();\nexport default singleton;\n","// @flow\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport VideoBox from '../components/VideoBox';\nimport ReactPaginate from 'react-paginate';\nimport '../sass/Home.scss';\nimport ApiService from '../services/youtubeApiService';\nimport type { Items } from '../services/youtubeApiService';\n// XXX VideoBox 會依賴 grid, 其實好像還好\nexport function Home(): React.Node {\n  const [data, setData] = useState<Items[] | null>([]);\n\n  useEffect(() => {\n    setData(ApiService.getPage(0));\n  }, []);\n  const handlePageClick = ({ selected }: { selected: number }) => {\n    console.log('handle page click', selected);\n    setData(ApiService.getPage(selected));\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"wrapper\">\n        {data.map((d, idx) => (\n          <VideoBox\n            key={idx}\n            id={d.id}\n            thumbnail={d.snippet.thumbnails.default}\n            title={d.snippet.title}\n            description={d.snippet.description}\n            duration={d.contentDetails.duration}\n          />\n        ))}\n      </section>\n\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={9}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","// @flow\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { fromEvent, merge } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport '../sass/VideoBox.scss';\n\ninterface PropType {\n  videoEl: React.ElementRef<any>;\n}\n\nexport function AdBox(props: PropType): React.Node {\n  const [adshow, setAdshow] = useState(true);\n\n  useEffect(() => {\n    const { videoEl } = props;\n    const playEvent = fromEvent(videoEl.current, 'play');\n    const pauseEvent = fromEvent(videoEl.current, 'pause');\n\n    const sub = merge(playEvent, pauseEvent)\n      .pipe(tap(() => setAdshow((s) => !s)))\n      .subscribe();\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [props]);\n  return (\n    <div className={`ad ${adshow ? '' : 'hide'}`}>\n      <h1 className=\"pd20\">\n        demo designed by Howard Chang. <br />\n        I'm looking for a frontend engineer job.....QQ\n      </h1>\n    </div>\n  );\n}\n\nexport default AdBox;\n","// @flow\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AdBox from '../components/AdBox';\nimport ReactHlsPlayer from 'react-hls-player';\nimport '../sass/Player.scss';\nimport ApiService from '../services/youtubeApiService';\nimport type { Items } from '../services/youtubeApiService';\nexport function Player(): React.Node {\n  const videoEl = useRef(null);\n  let { id } = useParams();\n  const [s] = useState<Items>(ApiService.get(id));\n\n  return (\n    <div className=\"container\">\n      <section className=\"video_container\">\n        <ReactHlsPlayer\n          url=\"https://bitdash-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8\"\n          autoplay={false}\n          controls={true}\n          width=\"100%\"\n          height=\"auto\"\n          playerRef={videoEl}\n          className=\"video\"\n        />\n        <AdBox videoEl={videoEl} />\n      </section>\n      <section>\n        <h1 className=\"topic\">{s.snippet.title}</h1>\n        {s.snippet.description.split('\\n').map((t, i) => (\n          <p key={i}>{t}</p>\n        ))}\n\n        {/* <p dangerouslySetInnerHTML={{ __html: s.snippet.description }} /> */}\n      </section>\n    </div>\n  );\n}\n\nexport default Player;\n","// @flow\nimport * as React from 'react';\n\nexport function Player(): React.Node {\n  return <div>like</div>;\n}\n\nexport default Player;\n","// @flow\nimport * as React from 'react';\nimport './App.scss';\nimport styled from 'styled-components';\nimport Home from './pages/Home';\nimport Player from './pages/Player';\nimport Like from './pages/Like';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ApiService from './services/youtubeApiService';\n\nconst Header = styled.header`\n  max-width: 1140px;\n  margin: auto;\n  min-height: 50px;\n`;\n\nconst Footer = styled.footer`\n  min-height: 50px;\n  margin: auto;\n`;\n\nexport function App(): React.Node {\n  const [event, setEvent] = useState('init');\n\n  useEffect(() => {\n    ApiService._event$.asObservable().subscribe((d) => {\n      setEvent(d);\n    });\n  }, []);\n  if (event === 'init') {\n    return (\n      <div className=\"container\">\n        <h1>讀取中，請稍候......</h1>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <Router>\n          <Header>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">首頁</Link>\n                </li>\n                <li>\n                  <Link to=\"/like\">收藏</Link>\n                </li>\n              </ul>\n            </nav>\n          </Header>\n          <div className=\"body\">\n            <Switch>\n              <Route path=\"/player/:id\">\n                <Player />\n              </Route>\n              <Route path=\"/like\">\n                <Like />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n            <Footer>sample expired by ...</Footer>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}